
def localPlatform = platform()+ arch()

configurations {

    baseCompile

    mac64.extendsFrom(baseCompile)
    windows32.extendsFrom(baseCompile)
    windows64.extendsFrom(baseCompile)
    linux32.extendsFrom(baseCompile)
    linux64.extendsFrom(baseCompile)

    compile.extendsFrom(configurations.getByName(localPlatform))
}

dependencies {
    baseCompile project (':core')

    mac64 "org.eclipse.swt:org.eclipse.swt.cocoa.macosx.x86_64:4.3"
    windows32 "org.eclipse.swt:org.eclipse.swt.win32.win32.x86:4.3"
    windows64 "org.eclipse.swt:org.eclipse.swt.win32.win32.x86_64:4.3"
    linux32 "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86:4.3"
    linux64 "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86_64:4.3"
}

publishing {
    publications {
        /*
        mac_x86_64(MavenPublication) {
            artifactId 'ui-mac-x86-64'

            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
        */
    }
}

def arch() {
    def arch = System.getProperty('os.arch')
    switch (arch) {
        case "x86": case "amd": return "32"
        case "x86_64": case "amd64": return "64"
    }
    return arch
}

def platform() {
    return System.getProperty('os.name').toLowerCase().split()[0]
}
